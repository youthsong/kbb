<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 配置緩存管理器 -->
    <!-- <bean id="cacheManager1" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        指定 ehcache 的配置文件，下面会给到
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean> -->

    <!-- 配置进行授权和认证的 Realm，要新增一个java类来实现，下面会有，class=包名.类名，init-methood是初始化的方法 -->
    <bean id="consoleManagerRealm" class="com.kbb.core.realm.ConsoleManagerRealm"></bean>

    <!-- 配置 Shiro 的 SecurityManager Bean. -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <!--  <property name="cacheManager" ref="cacheManager1"/> -->
        <property name="realm" ref="consoleManagerRealm"/>
    </bean>
    
    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean id="lifecycleBeanPostProcessor" 
        class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 配置 ShiroFilter bean: 该 bean 的 id 必须和 web.xml 文件中配置的 shiro filter 的 name 一致  -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 装配 securityManager -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置登陆页面 -->
        <property name="loginUrl" value="/WEB-INF/login.jsp"/>
        <!-- 登陆成功后的页面 -->
        <!-- <property name="successUrl" value="/shiro-success.jsp"/>
        <property name="unauthorizedUrl" value="/shiro-unauthorized.jsp"/> -->
        <!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截.  -->
        <!-- 配置url拦截规则:指定url访问需要具有什么样的权限
			authc:过滤器简称：访问某些资源需要经过shiro框架认证通过之后才能进行访问
			anon:匿名过滤器：访问url可以匿名访问（不需要认证，不需要授权） 
			perms:权限过滤器：访问url,需要当前用户具有什么样的权限 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 配置登出: 使用 logout 过滤器 -->
                /css/** = anon
				/images/** = anon
				/js/** = anon
				/static/** = anon
                /lib/** = anon
				<!-- 到登录的页面 方法-->
                /console/toLogin.action = anon
                <!-- 登录的方法 -->
                /console/login.action = anon
                /console/test.action = anon
                <!-- 放行图片 -->
                /add.jsp = anon
                /** = anon
                
            </value>
        </property>
    </bean>

</beans>